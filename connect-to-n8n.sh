#!/bin/bash

# Script ƒë·ªÉ k·∫øt n·ªëi MCP Server v·ªõi n8n network
# Ch·∫°y script n√†y sau khi deploy MCP Server

echo "üîç ƒêang t√¨m n8n container v√† network..."

# T√¨m container n8n
N8N_CONTAINER=$(docker ps --filter "ancestor=n8nio/n8n:latest" --format "{{.Names}}" | head -1)

if [ -z "$N8N_CONTAINER" ]; then
    echo "‚ùå Kh√¥ng t√¨m th·∫•y n8n container ƒëang ch·∫°y"
    echo "C√°c container ƒëang ch·∫°y:"
    docker ps --format "table {{.Names}}\t{{.Image}}"
    exit 1
fi

echo "‚úÖ T√¨m th·∫•y n8n container: $N8N_CONTAINER"

# L·∫•y network c·ªßa n8n
N8N_NETWORK=$(docker inspect $N8N_CONTAINER | grep -oP '"NetworkMode": "\K[^"]+' | head -1)

if [ -z "$N8N_NETWORK" ]; then
    echo "‚ùå Kh√¥ng l·∫•y ƒë∆∞·ª£c network c·ªßa n8n"
    exit 1
fi

echo "‚úÖ n8n ƒëang d√πng network: $N8N_NETWORK"

# Ki·ªÉm tra MCP container c√≥ t·ªìn t·∫°i kh√¥ng
if ! docker ps -a --format "{{.Names}}" | grep -q "^mcp-server$"; then
    echo "‚ùå MCP Server container ch∆∞a ƒë∆∞·ª£c t·∫°o"
    echo "Ch·∫°y: docker compose up -d --build"
    exit 1
fi

# Ki·ªÉm tra MCP ƒë√£ k·∫øt n·ªëi v√†o n8n network ch∆∞a
MCP_NETWORKS=$(docker inspect mcp-server | grep -oP '"NetworkID": "\K[^"]+')
N8N_NETWORK_ID=$(docker network inspect $N8N_NETWORK | grep -oP '"Id": "\K[^"]+' | head -1)

if echo "$MCP_NETWORKS" | grep -q "$N8N_NETWORK_ID"; then
    echo "‚úÖ MCP Server ƒë√£ k·∫øt n·ªëi v·ªõi n8n network"
else
    echo "üîó ƒêang k·∫øt n·ªëi MCP Server v√†o network: $N8N_NETWORK"
    docker network connect $N8N_NETWORK mcp-server

    if [ $? -eq 0 ]; then
        echo "‚úÖ K·∫øt n·ªëi th√†nh c√¥ng!"
    else
        echo "‚ùå K·∫øt n·ªëi th·∫•t b·∫°i"
        exit 1
    fi
fi

echo ""
echo "üìã Th√¥ng tin k·∫øt n·ªëi:"
echo "‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ"
echo "MCP Container:  mcp-server"
echo "n8n Container:  $N8N_CONTAINER"
echo "Shared Network: $N8N_NETWORK"
echo ""
echo "‚úÖ B√¢y gi·ªù n8n c√≥ th·ªÉ g·ªçi MCP qua:"
echo "   http://mcp-server:3000"
echo ""
echo "Ho·∫∑c t·ª´ b√™n ngo√†i:"
echo "   https://mcp.iconiclogs.com"
echo "‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ"
echo ""

# Test k·∫øt n·ªëi
echo "üß™ Test k·∫øt n·ªëi t·ª´ n8n container..."
TEST_RESULT=$(docker exec $N8N_CONTAINER wget -qO- http://mcp-server:3000/health 2>&1)

if echo "$TEST_RESULT" | grep -q "ok"; then
    echo "‚úÖ K·∫øt n·ªëi th√†nh c√¥ng! MCP Server ƒëang ho·∫°t ƒë·ªông"
    echo "$TEST_RESULT"
else
    echo "‚ö†Ô∏è  Kh√¥ng k·∫øt n·ªëi ƒë∆∞·ª£c. MCP Server c√≥ th·ªÉ ch∆∞a s·∫µn s√†ng"
    echo "Ki·ªÉm tra logs: docker logs mcp-server"
fi
